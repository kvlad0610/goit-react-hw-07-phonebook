{"version":3,"sources":["Components/Phonebook/ContactForm/ContactForm.module.css","Components/Phonebook/Filter/Filter.module.css","Components/Phonebook/ContactList/ContactList.module.css","reducer/contacts/actions.js","reducer/contacts/reducer.js","reducer/reducer.js","reducer/store.js","reducer/contacts/api.js","Components/Phonebook/ContactForm/ContactForm.jsx","reducer/contacts/selector.js","Components/Phonebook/ContactList/ContactList.jsx","Components/Phonebook/Filter/Filter.jsx","Components/Phonebook/PhonebookPage/PhonebookPage.jsx","App.js","index.js"],"names":["module","exports","filterContactAction","createAction","requestContactsAction","successContactsAction","errorContactsAction","requestAddContactsAction","successAddContactsAction","errorAddContactsAction","requestDeleteContactsAction","successDeleteContactsAction","errorDeleteContactsAction","initialState","contacts","createReducer","actions","_","payload","state","action","filter","contact","id","filters","type","isLoading","combineReducers","store","configureStore","reducer","axios","defaults","baseURL","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","handleChange","e","target","value","addCont","post","then","data","catch","error","addContact","onSubmit","preventDefault","className","form","label","input","onChange","button","contactsSelector","filterSelector","isLoadingSelector","ContactList","useSelector","deleteCont","contactId","delete","deleteContact","visibleContacts","toLowerCase","includes","map","item","IconButton","aria-label","onClick","Filter","length","currentTarget","Phonebook","useEffect","get","message","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cc5244d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2YusZ\",\"label\":\"ContactForm_label__27L9V\",\"input\":\"ContactForm_input__1zP_j\",\"button\":\"ContactForm_button__3W2tB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__jCftY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3PJly\",\"button\":\"ContactList_button__Yn4NS\",\"contactName\":\"ContactList_contactName__1Sv4z\",\"contactNumber\":\"ContactList_contactNumber__1C8Jf\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const filterContactAction = createAction('contact/filter');\r\n\r\nexport const requestContactsAction = createAction('contacts/request');\r\nexport const successContactsAction = createAction('contacts/success');\r\nexport const errorContactsAction = createAction('contacts/error');\r\n\r\nexport const requestAddContactsAction = createAction('contacts/add/request');\r\nexport const successAddContactsAction = createAction('contacts/add/success');\r\nexport const errorAddContactsAction = createAction('contacts/add/error');\r\n\r\nexport const requestDeleteContactsAction = createAction(\r\n  'contacts/delete/request',\r\n);\r\nexport const successDeleteContactsAction = createAction(\r\n  'contacts/delete/success',\r\n);\r\nexport const errorDeleteContactsAction = createAction('contacts/delete/error');\r\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\r\nimport * as actions from './actions';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n  filters: '',\r\n  isLoading: false,\r\n};\r\n\r\nconst getContacts = (_, actions) => actions.payload;\r\n\r\nconst addContact = (state, action) => [...state, action.payload];\r\n\r\nconst deleteContact = (state, action) =>\r\n  state.filter(contact => contact.id !== action.payload);\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n  [actions.successContactsAction]: getContacts,\r\n  [actions.successAddContactsAction]: addContact,\r\n  [actions.successDeleteContactsAction]: deleteContact,\r\n});\r\n\r\nconst filters = createReducer(initialState.filters, {\r\n  [actions.filterContactAction.type]: (_, action) => action.payload,\r\n});\r\nconst isLoading = createReducer(initialState.isLoading, {\r\n  [actions.requestContactsAction]: () => true,\r\n  [actions.successContactsAction]: () => false,\r\n  [actions.errorContactsAction]: () => false,\r\n  [actions.requestAddContactsAction]: () => true,\r\n  [actions.successAddContactsAction]: () => false,\r\n  [actions.errorAddContactsAction]: () => false,\r\n  [actions.requestDeleteContactsAction]: () => true,\r\n  [actions.successDeleteContactsAction]: () => false,\r\n  [actions.errorDeleteContactsAction]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filters,\r\n  isLoading,\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport contacts from './contacts/reducer';\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n});\r\n","// import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\nimport { configureStore } from '@reduxjs/toolkit';\r\n\r\nconst store = configureStore({ reducer });\r\n\r\n// const store = createStore(\r\n//   reducer,\r\n//   window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n// );\r\n\r\nexport default store;\r\n","import axios from 'axios';\r\nimport {\r\n  requestContactsAction,\r\n  successContactsAction,\r\n  errorContactsAction,\r\n  requestAddContactsAction,\r\n  successAddContactsAction,\r\n  errorAddContactsAction,\r\n  requestDeleteContactsAction,\r\n  successDeleteContactsAction,\r\n  errorDeleteContactsAction,\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:6060';\r\n\r\nexport const getContacts = () => dispatch => {\r\n  dispatch(requestContactsAction());\r\n\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(successContactsAction(data)))\r\n    .catch(error => dispatch(errorContactsAction(error.message)));\r\n};\r\n\r\nexport const addContact = (name, number) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(requestAddContactsAction());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(successAddContactsAction(data)))\r\n    .catch(error => dispatch(errorAddContactsAction(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(requestDeleteContactsAction());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(successDeleteContactsAction(contactId)))\r\n    .catch(error => dispatch(errorDeleteContactsAction(error)));\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContact } from '../../../reducer/contacts/api';\r\n// import shortid from 'shortid';\r\nimport { form, label, input, button } from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  function handleChange(e) {\r\n    switch (e.target.name) {\r\n      case 'name':\r\n        setName(e.target.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.target.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function addCont() {\r\n    if (name !== '' && number !== '') {\r\n      return dispatch(addContact(name, number));\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    addCont();\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} className={form}>\r\n        <label className={label}>\r\n          Name <br />\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label className={label}>\r\n          Number <br />\r\n          <input\r\n            className={input}\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button className={button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","export const contactsSelector = state => state.contacts.contacts;\r\nexport const filterSelector = state => state.contacts.filters;\r\nexport const isLoadingSelector = state => state.contacts.isLoading;\r\n","import { item } from './ContactList.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  contactsSelector,\r\n  filterSelector,\r\n  isLoadingSelector,\r\n} from '../../../reducer/contacts/selector';\r\nimport { deleteContact } from '../../../reducer/contacts/api';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nexport default function ContactList() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(contactsSelector);\r\n  const filter = useSelector(filterSelector);\r\n  const isLoading = useSelector(isLoadingSelector);\r\n\r\n  function deleteCont(contactId) {\r\n    return dispatch(deleteContact(contactId));\r\n  }\r\n\r\n  const visibleContacts = contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <ul>\r\n          {visibleContacts.map(({ id, name, number }) => (\r\n            <li className={item} key={id}>\r\n              {name}:{number}\r\n              <IconButton aria-label=\"delete\" onClick={() => deleteCont(id)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { label, input } from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContactAction } from '../../../reducer/contacts/actions';\r\n\r\nexport default function Filter() {\r\n  const contacts = useSelector(state => state.contacts.contacts);\r\n  const dispatch = useDispatch();\r\n\r\n  function onChange(e) {\r\n    return dispatch(filterContactAction(e.currentTarget.value));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {contacts.length > 0 && (\r\n        <label className={label}>\r\n          Find contacts by name <br />\r\n          <input className={input} type=\"text\" onChange={onChange} />\r\n        </label>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { getContacts } from '../../../reducer/contacts/api';\r\n\r\nconst Phonebook = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <ContactList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Phonebook;\r\n","import Phonebook from './Components/Phonebook/PhonebookPage/PhonebookPage';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Phonebook />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './reducer/store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}